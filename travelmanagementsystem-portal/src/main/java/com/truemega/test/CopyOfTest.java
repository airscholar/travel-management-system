package com.truemega.test;

public class CopyOfTest {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println(getQuery("05/2016", "03/2016"));
	}

	public static String getQuery(String firstMonth, String secondMonth) {
		String queury = "SELECT TO_CHAR(INVOICES_TEMP.INVOICE_ORDER) AS INVOICE_ORDER \n"
				+ " ,INVOICES_TEMP.INVOICE_NUMBER \n"
				+ " ,INVOICES_TEMP.BOOKING_FILE_NUMBER \n"
				+ " ,TO_CHAR(INVOICES_TEMP.DEPARTURE_DATE, 'dd/mm/yyyy') AS DEPARTURE_DATE \n"
				+ " ,TO_CHAR(INVOICES_TEMP.ARRIVAL_DATE, 'dd/mm/yyyy') AS ARRIVAL_DATE \n"
				+ " ,INVOICES_TEMP.EMPLOYEE_ID \n"
				+ " ,INVOICES_TEMP.COST_CENTER \n"
				+ " ,INVOICES_TEMP.COST_CENTER_DEPARTMENT \n"
				+ " ,INVOICES_TEMP.PASSENGER_NAME \n"
				+ " ,INVOICES_TEMP.SERVICE_TYPE \n"
				+ " ,INVOICES_TEMP.SERVICE_DESC \n"
				+ " ,INVOICES_TEMP.ROUTING \n"
				+ " ,INVOICES_TEMP.INTER_DOM \n"
				+ " ,TO_CHAR(INVOICES_TEMP.CHECK_IN, 'dd/mm/yyyy') AS CHECK_IN \n"
				+ " ,TO_CHAR(INVOICES_TEMP.CHECK_OUT, 'dd/mm/yyyy') AS CHECK_OUT \n"
				+ " ,TO_CHAR(INVOICES_TEMP.NUMBER_OF_NIGHTS) AS NUMBER_OF_NIGHTS \n"
				+ " ,TO_CHAR(INVOICES_TEMP.NUMBER_OF_ROOMS) AS NUMBER_OF_ROOMS \n"
				+ " ,INVOICES_TEMP.AIRLINE \n"
				+ " ,INVOICES_TEMP.ROOM_TYPE \n"
				+ " ,INVOICES_TEMP.SUPPLIER_NAME \n"
				+ " ,INVOICES_TEMP.NET_AMOUNT \n"
				+ " ,INVOICES_TEMP.OPERATION_FEES \n"
				+ " ,INVOICES_TEMP.TOTAL_AMOUNT \n"
				+ " ,INVOICES_TEMP.TICKET_NO \n"
				+ " ,INVOICES_TEMP.TRAVEL_FORM_NUMBER \n"
				+ " ,INVOICES_TEMP.DESCRIPTION \n"
				+ " ,TO_CHAR(INVOICES_TEMP.FROM_DATE, 'dd/mm/yyyy') AS FROM_DATE \n"
				+ " ,TO_CHAR(INVOICES_TEMP.TO_DATE, 'dd/mm/yyyy') AS TO_DATE \n"
				+ " ,INVOICES_TEMP.EMPLOYEE_DEPARTMENT \n"
				+ " ,TO_CHAR(INVOICES_TEMP.INVOICE_DATE, 'dd/mm/yyyy') AS INVOICE_DATE \n"
				+ " ,UPLOADED_INVOICE_FILE.INVOICES_MONTH AS INVOICES_MONTH \n"
				+ " FROM INVOICES_TEMP INNER JOIN UPLOADED_INVOICE_FILE \n"
				+ " ON INVOICES_TEMP.UPLOADED_INVOICE_FILE_ID = UPLOADED_INVOICE_FILE.ID \n"
				+ "  WHERE UPLOADED_INVOICE_FILE.INVOICES_MONTH IN ('"
				+ firstMonth
				+ "','"
				+ secondMonth
				+ "') \n"
				+ "  ORDER BY UPLOADED_INVOICE_FILE.INVOICES_MONTH,INVOICES_TEMP.INVOICE_ORDER";

		queury = "SELECT nvl(TO_CHAR(INVOICES_TEMP.INVOICE_ORDER) ,'NA') AS INVOICE_ORDER \n"
				+ " ,nvl(INVOICES_TEMP.INVOICE_NUMBER ,'NA') AS INVOICE_NUMBER \n"
				+ " ,nvl(INVOICES_TEMP.BOOKING_FILE_NUMBER ,'NA') AS BOOKING_FILE_NUMBER \n"
				+ " ,nvl(TO_CHAR(INVOICES_TEMP.DEPARTURE_DATE, 'dd/mm/yyyy') ,'NA') AS DEPARTURE_DATE \n"
				+ " ,nvl(TO_CHAR(INVOICES_TEMP.ARRIVAL_DATE, 'dd/mm/yyyy') ,'NA') AS ARRIVAL_DATE \n"
				+ " ,nvl(INVOICES_TEMP.EMPLOYEE_ID ,'NA') AS EMPLOYEE_ID \n"
				+ " ,nvl(INVOICES_TEMP.COST_CENTER ,'NA') AS COST_CENTER \n"
				+ " ,nvl(INVOICES_TEMP.COST_CENTER_DEPARTMENT ,'NA') AS COST_CENTER_DEPARTMENT \n"
				+ " ,nvl(INVOICES_TEMP.PASSENGER_NAME ,'NA') AS PASSENGER_NAME \n"
				+ " ,nvl(INVOICES_TEMP.SERVICE_TYPE ,'NA') AS SERVICE_TYPE \n"
				+ " ,nvl(INVOICES_TEMP.SERVICE_DESC ,'NA') AS SERVICE_DESC \n"
				+ " ,nvl(INVOICES_TEMP.ROUTING ,'NA') AS ROUTING \n"
				+ " ,nvl(INVOICES_TEMP.INTER_DOM ,'NA') AS INTER_DOM \n"
				+ " ,nvl(TO_CHAR(INVOICES_TEMP.CHECK_IN, 'dd/mm/yyyy') ,'NA') AS CHECK_IN \n"
				+ " ,nvl(TO_CHAR(INVOICES_TEMP.CHECK_OUT, 'dd/mm/yyyy') ,'NA') AS CHECK_OUT \n"
				+ " ,nvl(TO_CHAR(INVOICES_TEMP.NUMBER_OF_NIGHTS) ,0) AS NUMBER_OF_NIGHTS \n"
				+ " ,nvl(TO_CHAR(INVOICES_TEMP.NUMBER_OF_ROOMS) ,0) AS NUMBER_OF_ROOMS \n"
				+ " ,nvl(INVOICES_TEMP.AIRLINE ,'NA') AS AIRLINE \n"
				+ " ,nvl(INVOICES_TEMP.ROOM_TYPE ,'NA') AS ROOM_TYPE \n"
				+ " ,nvl(INVOICES_TEMP.SUPPLIER_NAME ,'NA') AS SUPPLIER_NAME \n"
				+ " ,nvl(INVOICES_TEMP.NET_AMOUNT ,0) AS NET_AMOUNT \n"
				+ " ,nvl(INVOICES_TEMP.OPERATION_FEES ,0) AS OPERATION_FEES \n"
				+ " ,nvl(INVOICES_TEMP.TOTAL_AMOUNT ,0) AS TOTAL_AMOUNT \n"
				+ " ,nvl(INVOICES_TEMP.TICKET_NO ,'NA') AS TICKET_NO \n"
				+ " ,nvl(INVOICES_TEMP.TRAVEL_FORM_NUMBER ,'NA') AS TRAVEL_FORM_NUMBER \n"
				+ " ,nvl(INVOICES_TEMP.DESCRIPTION ,'NA') AS DESCRIPTION \n"
				+ " ,nvl(TO_CHAR(INVOICES_TEMP.FROM_DATE, 'dd/mm/yyyy') ,'NA') AS FROM_DATE \n"
				+ " ,nvl(TO_CHAR(INVOICES_TEMP.TO_DATE, 'dd/mm/yyyy') ,'NA') AS TO_DATE \n"
				+ " ,nvl(INVOICES_TEMP.EMPLOYEE_DEPARTMENT ,'NA') AS DESCRIPTION \n"
				+ " ,nvl(TO_CHAR(INVOICES_TEMP.INVOICE_DATE, 'dd/mm/yyyy') ,'NA') AS INVOICE_DATE \n"
				+ " ,nvl(UPLOADED_INVOICE_FILE.INVOICES_MONTH ,'NA') AS INVOICES_MONTH \n"
				+ " FROM INVOICES_TEMP INNER JOIN UPLOADED_INVOICE_FILE \n"
				+ " ON INVOICES_TEMP.UPLOADED_INVOICE_FILE_ID = UPLOADED_INVOICE_FILE.ID \n"
				+ " WHERE UPLOADED_INVOICE_FILE.INVOICES_MONTH IN ('"
				+ firstMonth
				+ "','"
				+ secondMonth
				+ "') \n"
				+ " ORDER BY UPLOADED_INVOICE_FILE.INVOICES_MONTH,INVOICES_TEMP.INVOICE_ORDER \n";

		queury = " SELECT INVOICES_TEMP.INVOICE_ORDER, \n"
				+ " INVOICES_TEMP.INVOICE_NUMBER, \n"
				+ " NVL(INVOICES_TEMP.BOOKING_FILE_NUMBER, 'NA') AS BOOKING_FILE_NUMBER, \n"
				+ " INVOICES_TEMP.SERVICE_TYPE, \n"
				+ " INVOICES_TEMP.SERVICE_DESC, \n"
				+ " NVL(INVOICES_TEMP.ROUTING, 'NA')   AS ROUTING, \n"
				+ " NVL(INVOICES_TEMP.INTER_DOM, 'NA') AS INTER_DOM, \n"
				+ " NVL(INVOICES_TEMP.AIRLINE, 'NA')   AS AIRLINE, \n"
				+ " NVL(INVOICES_TEMP.ROOM_TYPE, 'NA') AS ROOM_TYPE, \n"
				+ " INVOICES_TEMP.SUPPLIER_NAME, \n"
				+ " NVL(to_char(INVOICES_TEMP.NET_AMOUNT/((INVOICES_TEMP.CHECK_OUT-INVOICES_TEMP.CHECK_IN)+1), '9999999999999.99'),'0')  AS HOTEL_RATE, \n"
				+ " NVL(to_char(INVOICES_TEMP.NET_AMOUNT/((INVOICES_TEMP.TO_DATE-INVOICES_TEMP.FROM_DATE)+1), '9999999999999.99'),'0') AS INSURANCE_RATE, \n"
				+ " NVL(INVOICES_TEMP.NET_AMOUNT,0) AS RATE \n"
				+ " FROM INVOICES_TEMP  INNER JOIN UPLOADED_INVOICE_FILE \n"
				+ " ON UPLOADED_INVOICE_FILE.ID=INVOICES_TEMP.UPLOADED_INVOICE_FILE_ID";

		return queury;
	}
}
